---
import Layout from '../../layouts/Layout.astro';
import { stapiService } from '../../services/stapiService';
import { slugify } from '../../utils/slugify.js';


const { character } = Astro.props;

// Create JSON-LD schema for character page
const characterSchema = {
  "@context": "https://schema.org",
  "@type": "Person",
  "name": character.name,
  "description": `${character.name} is a character from Star Trek.`,
  "url": `https://star-trek-timelines.netlify.app/characters/${slugify(character.name)}/`,
  "jobTitle": character.title || "Officer",
  "image": character.wikiImage || character.image || "/images/generic-character.jpg"
};
---

<Layout 
  title={`${character.name} | Star Trek Character Profile`}
  description={`Learn about ${character.name}, a character from Star Trek.`}
  schemaData={characterSchema}
>
  <div class="container mx-auto px-4 py-12">
    <div class="lcars-header mb-8">
      <div class="lcars-header-content">
        <h1 class="text-3xl">{character.name}</h1>
      </div>
    </div>
    
    <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
      <div class="md:col-span-1">
        <div class="lcars-panel">
          <div class="lcars-top-bar flex">
            <div class="w-32 h-8 bg-starfleet-gold rounded-tl-lg"></div>
            <div class="flex-1 h-8 bg-starfleet-blue"></div>
          </div>
          
          <div class="panel-content p-6">
            <div class="character-image aspect-square overflow-hidden mb-4">
              <img
                src={character.wikiImage || character.image || "/images/generic-character.jpg"}
                alt={character.name}
                class="w-full h-full object-cover"
                onerror="this.onerror=null; this.src='/images/generic-character.jpg';"
              />
            </div>
            
            {character.wikiUrl && (
              <a href={character.wikiUrl} target="_blank" rel="noopener noreferrer" class="text-starfleet-gold hover:underline inline-flex items-center mt-4">
                View on Memory Alpha <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="ml-1"><path d="M18 13v6a2 2 0 01-2 2H5a2 2 0 01-2-2V8a2 2 0 012-2h6"></path><path d="M15 3h6v6"></path><path d="M10 14L21 3"></path></svg>
              </a>
            )}
          </div>
        </div>
      </div>
      
      <div class="md:col-span-2">
        <div class="lcars-panel">
          <div class="lcars-top-bar flex">
            <div class="w-32 h-8 bg-starfleet-gold rounded-tl-lg"></div>
            <div class="flex-1 h-8 bg-starfleet-blue"></div>
            <div class="w-16 h-8 bg-starfleet-red"></div>
          </div>
          
          <div class="panel-content p-6">
            <h2 class="text-2xl text-starfleet-gold mb-4">Character Profile</h2>
            
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-6">
              {character.gender && (
                <div class="profile-item">
                  <h3 class="text-white text-lg">Gender</h3>
                  <p class="text-gray-300">{character.gender}</p>
                </div>
              )}
              
              {character.yearOfBirth && (
                <div class="profile-item">
                  <h3 class="text-white text-lg">Year of Birth</h3>
                  <p class="text-gray-300">{character.yearOfBirth}</p>
                </div>
              )}
              
              {character.yearOfDeath && (
                <div class="profile-item">
                  <h3 class="text-white text-lg">Year of Death</h3>
                  <p class="text-gray-300">{character.yearOfDeath}</p>
                </div>
              )}
              
              {character.title && (
                <div class="profile-item">
                  <h3 class="text-white text-lg">Rank/Title</h3>
                  <p class="text-gray-300">{character.title}</p>
                </div>
              )}
              
              {character.characterSpecies && character.characterSpecies.length > 0 && (
                <div class="profile-item">
                  <h3 class="text-white text-lg">Species</h3>
                  <p class="text-gray-300">
                    {character.characterSpecies.map(s => s.name).join(', ')}
                  </p>
                </div>
              )}
            </div>
            
            <div class="mt-8">
              <a href="/characters/" class="inline-flex items-center text-starfleet-gold hover:underline">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mr-1"><path d="M19 12H5M12 19l-7-7 7-7"/></svg>
                Back to Characters
              </a>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</Layout>

<style>
  .character-image {
    border-radius: 6px;
    overflow: hidden;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
  }
  
  .profile-item {
    margin-bottom: 1rem;
  }
  
  .profile-item h3 {
    margin-bottom: 0.25rem;
  }
</style>